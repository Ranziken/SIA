@model CapstoneProj3.Models.Syll

@{

    ViewBag.Title = "Create";
    var i = 0;
    var x = 0;
}

<h2>Create</h2>


@using (Html.BeginForm("InsertSyll", "Syll", FormMethod.Post))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Syll</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
    <input type="button" value=" adwd" />

    <h2>ClassroomAndLabPolicies</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center">Description</th>
            </tr>
        </thead>
        <tbody id="clp"></tbody>
    </table>
    <input id="clpbtn" type="button" value="Add Row" />
    <hr />
    <h2>Course Deliverable Outputs And Requirements</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center">Output Requirement</th>
                <th class="text-center">Output Requirement Description</th>
                <th class="text-center">Cilo</th>
                <th class="text-center">ToA</th>
            </tr>
        </thead>
        <tbody id="codor"></tbody>
    </table>
    <input id="codorbtn" type="button" value="Add Row" />
    <hr />
    <h2>Course Outcomes</h2>
    <table class="table table-hover table-bordered">

        <thead>

            <tr>
                <th class="text-center">Code</th>
                <th class="text-center">Description</th>
                <th class="text-center">Core Value Activated</th>
                <th class="text-center">PO Activated</th>
                <th class="text-center">Domain of Level & Learning</th>
            </tr>
        </thead>
        <tbody id="butco"></tbody>

    </table>
    <input id="cobtn" type="button" value=" Add Row" />
    <hr />


    <h2>Learning Plan</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center">Outcome</th>
                <th class="text-center">Number of Hours</th>
                <th class="text-center">Topics</th>
                <th class="text-center">Activity L</th>
                <th class="text-center">Activity T</th>
                <th class="text-center">Asses</th>
            </tr>
        </thead>
        <tbody id="lp"></tbody>
    </table>
    <input id="lpbtn" type="button" value=" Add Row" />
    <hr />
    <h2>Program Educational Objectives</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center">Code</th>
                <th class="text-center">Description</th>
                <th class="text-center">Core Value Activated</th>
            </tr>
        </thead>
        <tbody id="peo"></tbody>
    </table>
    <input id="peobtn" type="button" value=" Add Row" />
    <hr />
    <h2>Program Outcomes</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center">Code</th>
                <th class="text-center">Attribute</th>
                <th class="text-center">Description</th>
                <th class="text-center">Core Values ACtivated</th>
            </tr>
        </thead>
        <tbody id="po"></tbody>
    </table>
    <input id="pobtn" type="button" value=" Add Row" />
    <hr />
    <hr />
    <h2>Grading System</h2>
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th class="text-center">Outputs</th>
                <th class="text-center">Type</th>
                <th class="text-center">Weight</th>
            </tr>
        </thead>
        <tbody id="gs"></tbody>
    </table>
    <input id="gsbtn" type="button" value=" Add Row" />
    <hr />
    <input type="submit" value="Submit" />

    <div id="rubdiv">
        <h2>Rubrics</h2>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th class="text-center">Criteria</th>
                    <th class="text-center">Outstanding</th>
                    <th class="text-center">Competent</th>
                    <th class="text-center">Marginal</th>
                    <th class="text-center">Not Acceptable</th>
                </tr>
            </thead>
            <tbody id="rbrics">
                @for (x = 0; x < 10; x++)
                {
                <tr id="tr_@x">
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].criteria, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].outstanding, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].competent, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].marginal, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].notAcceptable, new { htmlAttributes = new { @class = "form - control" } })</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="rubdiv">
        <h2>Rubrics</h2>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th class="text-center">Criteria</th>
                    <th class="text-center">Outstanding</th>
                    <th class="text-center">Competent</th>
                    <th class="text-center">Marginal</th>
                    <th class="text-center">Not Acceptable</th>
                </tr>
            </thead>
            <tbody id="rbrics">
                @for (x = 10; x < 20; x++)
                {
                <tr id="tr_@x">
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].criteria, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].outstanding, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].competent, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].marginal, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].notAcceptable, new { htmlAttributes = new { @class = "form - control" } })</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="rubdiv">
        <h2>Rubrics</h2>
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th class="text-center">Criteria</th>
                    <th class="text-center">Outstanding</th>
                    <th class="text-center">Competent</th>
                    <th class="text-center">Marginal</th>
                    <th class="text-center">Not Acceptable</th>
                </tr>
            </thead>
            <tbody id="rbrics">
                @for (x = 20; x < 30; x++)
                {
                <tr id="tr_@x">
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].criteria, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].outstanding, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].competent, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].marginal, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].notAcceptable, new { htmlAttributes = new { @class = "form - control" } })</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="rubdiv">
        <h2>Rubrics</h2>
        <table class="table table-hover table-bordered">
            <thead>
                <tr >
                    <th class="text-center">Criteria</th>
                    <th class="text-center">Outstanding</th>
                    <th class="text-center">Competent</th>
                    <th class="text-center">Marginal</th>
                    <th class="text-center">Not Acceptable</th>
                </tr>
            </thead>
            <tbody id="rbrics">
                @for (x = 30; x < 40; x++)
                {
                <tr id="tr_@x">
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].criteria, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].outstanding, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].competent, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].marginal, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].notAcceptable, new { htmlAttributes = new { @class = "form - control" } })</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div id="rubdiv">
        <h2>Rubrics</h2>
        <table class="table table-hover table-bordered">
            <thead>
                <tr >
                    <th class="text-center">Criteria</th>
                    <th class="text-center">Outstanding</th>
                    <th class="text-center">Competent</th>
                    <th class="text-center">Marginal</th>
                    <th class="text-center">Not Acceptable</th>
                </tr>
            </thead>
            <tbody id="rbrics">
                @for (x = 40; x < 50; x++)
                {
                <tr id="tr_@x">
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].criteria, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].outstanding, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].competent, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].marginal, new { htmlAttributes = new { @class = "form - control" } })</td>
                    <td class="text-center">@Html.EditorFor(model => model.Lr[x].notAcceptable, new { htmlAttributes = new { @class = "form - control" } })</td>
                </tr>
                }
            </tbody>
        </table>
    </div>

    <input id="rbricsbtn" type="button" value=" Add Row" />
    <hr />
    <input type="submit" value="Submit" />
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="//code.jquery.com/jquery-2.1.1.min.js" type="text/javascript"></script>
<script type="text/javascript">

    $(document).ready(function () {
        console.log("ready");
        @*@{var x = 0;}
        @for (i = 0, x = 0; i < 50; i++)
        {
            if (i == 0 || i == 10 || i == 20 || i == 30 || i == 40 || i == 50 )
            {
            <text>
                var pirs = '<h2>Rubrics</h2><table class="table table-hover table-bordered"><thead><tr><th>Criteria</th><th>Outstanding</th><th>Competent</th><th>Marginal</th><th>Not Acceptable</th></tr></thead><tbody id=rbricsl'+@x+'></tbody></table>';
                $("#rubdiv").append(pirs);
                @{x++;}
            </text>
            }

            <text>
        var dun = '<tr id=rbtr'+@i+'><td>@Html.EditorFor(model => model.Lr[i].criteria, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lr[i].outstanding, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lr[i].competent, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lr[i].marginal, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lr[i].notAcceptable, new { htmlAttributes = new { @class = "form - control" } })</td></tr>';
        
        $("#rbricsl"+@x).append(dun);
</text>
             
        }*@
        


        $("#butco").append("QWQWQWQWQWQWQWx");
       // $("#CO").click(function () {
            console.log("F#F#$G$G%$YH%U");

            @for (i = 0; i < 10; i++)
            {
                <text>var dun = '<tr id=co'+@i+'><td>@Html.EditorFor(model => model.Lco[i].CO_Code, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lco[i].CO_DESC, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lco[i].CO_CVA, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lco[i].CO_POactivated, new { htmlAttributes = new { @class = "form - control" } })</td><td>@Html.EditorFor(model => model.Lco[i].CO_DOLLevel, new { htmlAttributes = new { @class = "form - control" } })</td></tr>';
                $("#butco").append(dun);</text>

            }

        //});

        //$("#codorbtn").click(function () {
            console.log("F#F#$G$G%$YH%U");
           @for (i = 0; i < 10; i++)
           {
                <text>var dun = '<tr id=codor'+@i+'><td>@Html.EditorFor(model => model.Lcodor[i].OutputReq, new { htmlAttributes = new { @class = "form-control"  } })</td><td>@Html.EditorFor(model => model.Lcodor[i].OutputReqDesc, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lcodor[i].Cilo_Add, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lcodor[i].ToA, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#codor").append(dun);
            </text>

           }
        $("#Lcodor_0__OutputReq").focusout(function () {
            var qqq=$("#Lcodor_0__OutputReq").val();
            var dun = '<tr id=gs'+@i+'><td><label id="gss1">'+qqq+' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);// WATCHH DIIIISSSSS

        });
        $("#Lcodor_1__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_1__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_2__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_2__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_3__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_3__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_4__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_4__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_5__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_5__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_6__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_6__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_7__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_7__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_8__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_8__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });
        $("#Lcodor_9__OutputReq").focusout(function () {
            var qqq = $("#Lcodor_9__OutputReq").val();
            var dun = '<tr id=gs' +@i+'><td><label id="gss1">' + qqq + ' Grade'+'</label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
        });


            console.log("F#F#$G$G%$YH%U");

            @for (i = 0; i < 10; i++)
            {
               <text> var dun = '<tr id=clp'+@i+'><td>@Html.EditorFor(model => model.Lclp[i].CLP_desc, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#clp").append(dun);
            </text>

            }

        //});

        //$("#lpbtn").click(function () {
            //console.log("F#F#$G$G%$YH%U");


            @for (i = 0; i < 10; i++)
            {

                <text>var dun = '<tr id=lp'+@i+'><td>@Html.EditorFor(model => model.Llplan[i].LPlan_Outcome, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Llplan[i].LPlan_No_hours, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Llplan[i].LPlan_Topics, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Llplan[i].activityL, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Llplan[i].activityT, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Llplan[i].LPlan_Asses, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
                $("#lp").append(dun);
            </text>

            }


        //});

        //$("#peobtn").click(function () {
            console.log("F#F#$G$G%$YH%U");

            @for (i = 0; i < 10; i++)
            {
                <text>var dun = '<tr id=peo'+@i+'><td>@Html.EditorFor(model => model.Lpeo[i].Peo_CODE, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lpeo[i].Peo_DESC, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lpeo[i].Peo_CVA, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#peo").append(dun);
            </text>

            }


        //});

        //$("#pobtn").click(function () {
            console.log("F#F#$G$G%$YH%U");

            @for (i = 0; i < 10; i++)
            {
                <text>var dun = '<tr id=po'+@i+'><td>@Html.EditorFor(model => model.Lpo[i].PO_Code, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lpo[i].PO_attr, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lpo[i].PO_Desc, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lpo[i].PO_CVA, new { htmlAttributes = new { @class = "form-control" } })</td> </tr>';
            $("#po").append(dun);
            </text>

            }


        //});

        //$("#gsbtn").click(function () {
            //console.log("F#F#$G$G%$YH%U");

            @for (i = 0; i < 10; i++)
            {
                <text>var dun = '<tr id=gs'+@i+'><td><label id="gss1"></label><td>@Html.EditorFor(model => model.Lgs[i].GRD_type, new { htmlAttributes = new { @class = "form-control" } })</td><td>@Html.EditorFor(model => model.Lgs[i].GRD_weight, new { htmlAttributes = new { @class = "form-control" } })</td></tr>';
            $("#gs").append(dun);
            </text>

            }


       // });
       // for (i = 0; i < 10; i++) {
       //    $("#rbrics" + i).hide();
        //}
        for (i = 0; i < 10; i++) {
            $("#tr_@x" + i).hide();
        }
        for (i = 10; i < 20; i++) {
             $("#tr_@x" + i).hide();
        }
        for (i = 20; i < 30; i++) {
             $("#tr_@x" + i).hide();
        }
        for (i = 30; i < 40; i++) {
             $("#tr_@x" + i).hide();
        }
        for (i = 40; i < 50; i++) {
            $("#tr_@x" + i).hide();
        }
        for (i = 60; i < 70; i++) {
            $("#tr_@x"+i).hide();
        }
        
        for(i=0; i<10; i++)
        {
           $("#gs" +i).hide();
        }
        for(i=1; i<10; i++)
        {
           $("#po" +i).hide();
        }
        for(i=1; i<10; i++)
        {
           $("#peo"+i).hide();
        }
        for(i=1; i<10; i++)
        {
           $("#lp"+i).hide();
        }
        for(i=1; i<10; i++)
        {
           $("#clp" +i).hide();
        }
        for(i=1; i<10; i++)
        {
            $("#codor" +i).hide();
        }
        for(i=1; i<10; i++)
        {
            $("#co"+i).hide();
        }
        var rbricsctr = 1;
        $("#rbricsbtn").click(function () {
            $("#rbrics" + rbricsctr).show();
            console.log(rbricsctr);
            rbricsctr++;
        });
        var gsctr = 1;
        $("#gsbtn").click(function () {
            $("#gs" + gsctr).show();
            console.log(gsctr);
            gsctr++;
        });
        var coctr = 1;
        $("#cobtn").click(function () {
            $("#co" + coctr).show();
            console.log(coctr);
            coctr++;
        });
        var codorctr = 1;
        $("#codorbtn").click(function () {
            $("#codor" + codorctr).show();
            console.log(codorctr);
            codorctr++;
        });
        var clpctr = 1;
        $("#clpbtn").click(function () {
            $("#clp" + clpctr).show();
            console.log(clpctr);
            clpctr++;
        });
        var lpctr = 1;
        $("#lpbtn").click(function () {
            $("#lp" + lpctr).show();
            console.log(gsctr);
            lpctr++;
        });
        var poctr = 1;
        $("#pobtn").click(function () {
            $("#po" + poctr).show();
            console.log(poctr);
            poctr++;
        });
        var peoctr = 1;
        $("#peobtn").click(function () {
            $("#peo" + peoctr).show();
            console.log(peoctr);
            peoctr++;
        });
    });
</script>

